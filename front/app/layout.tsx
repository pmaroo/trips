// next.js 13 이후로는 pages 폴더의 형태를 권장하지 않음
// 그대신 app 라우팅은 폴더 형식으로 제공됨

import "@/styles/global.css";
// import "@/styles/embla/base.css";
// import "@/styles/embla/embla.css";
import Leins from "../lib/lenis";

// next/navigation 공부
// notFound 강제 404 띄워버리는 함수
// next/navigation 클라이언트 컴포넌트에서만 가능
import { Metadata } from "@node_modules/next";
import ClientLayout from "./clinetLayout";
import Providers from "@components/layout/providers";
import Components from "@components/shadcn";
import { cookies } from "next/headers";
import axios from "axios";
import { JwtUserDTO } from "../types/user";

export const metadata: Metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

// 404일때 헤더푸터 안보이도록 레이아웃 나누기
// RootLayout
// Next.js 13의 App Router 구조에서 핵심적인 역할을 하는 컴포넌트
// 전체 애플리케이션의 기본 레이아웃을 정의
// 따라서 useClient에서 사용 불가능

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const { Toaster } = Components;
  const cookieStore = await cookies();
  const accessToken = cookieStore.get("jwt")?.value;
  const refreshToken = cookieStore.get("refresh")?.value;

  const apiClient = axios.create({
    baseURL: "http://localhost:8080/api/auth", // api 주소
    headers: {
      "Content-Type": "application/json",
      Cookie: `jwt=${accessToken}; refresh=${refreshToken}`,
    },
    withCredentials: true, // ✅ 쿠키 포함 요청(서버컴포넌트에서 실상 필요X)
  });

  const verify = async () => {
    try {
      const { data } = await apiClient.post("/verify");

      return data;
    } catch (error) {
      console.log(error.response.data.message || error);
    }
  };

  const user = accessToken && refreshToken ? await verify() : null;

  return (
    <html lang="ko">
      <body>
        <Providers>
          <ClientLayout
            accessToken={accessToken}
            refreshToken={refreshToken}
            me={user}
          >
            {children}
          </ClientLayout>
        </Providers>
        <Toaster />
        <Leins />
        <script
          type="text/javascript"
          src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=24bc02992c631c914a19667e16adbd8a"
        ></script>
      </body>
    </html>
  );
}
